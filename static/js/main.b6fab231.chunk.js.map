{"version":3,"sources":["components/Editor/elements.js","components/Editor/utils.js","components/Button/index.js","components/Editor/inlineStyleButtons.js","components/Editor/decorators/hashtag/index.js","components/Editor/decorators/quotes/index.js","components/Editor/decorators/index.js","components/Editor/index.js","Bootstrap.js","theme.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","section","_templateObject","Toolbar","div","_templateObject2","Container","_templateObject3","props","theme","colors","gray_high","gray_low","Image","img","_templateObject4","blockRenderer","block","getType","component","_ref","src","contentState","getEntity","getEntityAt","getData","react_default","a","createElement","editable","attachImage","currentState","setCurrentState","event","target","files","length","file","reader","FileReader","readAsDataURL","addEventListener","contentWithEntity","getCurrentContent","createEntity","result","entityKey","getLastCreatedEntityKey","newState","EditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","ButtonStyled","button","actived","padding","marginRight","fontSize","fontWeight","borderRadius","outline","cursor","border","concat","primary_color_low","color","primary_color","background","Button","_ref2","onClick","children","type","onMouseDown","defaultProps","buttons","label","style","InlineStyleButtons","toggleStyle","currentStyle","Fragment","map","components_Button","key","has","Hashtag","span","hashtag_templateObject","PATTERN","decorator","strategy","contentBlock","callback","matchArr","start","text","getText","exec","index","Object","objectWithoutProperties","Quotes","quotes_templateObject","decorators","CompositeDecorator","hashtag","quotes","Editor","_useState","useState","createEmpty","_useState2","slicedToArray","currentInlineStyle","getCurrentInlineStyle","inlineStyleButtons","e","preventDefault","RichUtils","toggleInlineStyle","accept","onChange","Draft","editorState","state","blockRendererFn","handleKeyCommand","command","placeholder","Bootstrap_templateObject","Title","h1","Bootstrap_templateObject2","Copyright","Bootstrap_templateObject3","Heart","Bootstrap_templateObject4","Link","_templateObject5","Bootstrap","Bootstrap_Wrapper","components_Editor","href","gray","Boolean","window","location","hostname","match","ReactDOM","render","emotion_theming_browser_esm","src_Bootstrap","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6fab231.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.section``;\n\nexport const Toolbar = styled.div``;\n\nexport const Container = styled.div`\n  margin-top: 1rem;\n  padding: 10px;\n  width: 650px;\n  height: 450px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  border: 1px solid ${props => props.theme.colors.gray_high};\n  background: ${props => props.theme.colors.gray_low};\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 220px;\n  height: auto;\n`;\n","import React from 'react';\nimport {EditorState, AtomicBlockUtils} from 'draft-js';\nimport {Image} from './elements';\n\nexport const blockRenderer = block => {\n  const type = block.getType();\n  if (type === 'atomic') {\n    return {\n      component: ({contentState}) => {\n        const entity = contentState.getEntity(block.getEntityAt(0));\n        const {src} = entity.getData();\n\n        return <Image src={src} />;\n      },\n      editable: false,\n    };\n  }\n\n  return null;\n};\n\nexport const attachImage = (currentState, setCurrentState) => event => {\n  if (event.target.files && event.target.files.length) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.addEventListener('load', () => {\n      const content = currentState.getCurrentContent();\n      const contentWithEntity = content.createEntity('IMAGE', 'IMMUTABLE', {\n        src: reader.result,\n      });\n      const entityKey = contentWithEntity.getLastCreatedEntityKey();\n      const newState = EditorState.set(currentState, {\n        currentContent: contentWithEntity,\n      });\n      setCurrentState(\n        AtomicBlockUtils.insertAtomicBlock(newState, entityKey, ' ')\n      );\n    });\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst ButtonStyled = styled.button(({theme, actived}) => ({\n  padding: '7px 12px',\n  marginRight: '10px',\n  fontSize: '0.9rem',\n  fontWeight: 'bold',\n  borderRadius: '5px',\n  outline: 'none',\n  cursor: 'pointer',\n  border: `1px solid ${theme.colors.primary_color_low}`,\n  color: actived ? '#FFF' : theme.colors.primary_color,\n  background: actived ? theme.colors.primary_color_low : '#FFF',\n}));\n\nconst Button = ({actived, onClick, children}) => (\n  <ButtonStyled type=\"button\" actived={actived} onMouseDown={onClick}>\n    {children}\n  </ButtonStyled>\n);\n\nButton.defaultProps = {\n  actived: false,\n};\n\nButton.propTypes = {\n  actived: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\n\nconst buttons = [\n  {\n    label: 'Bold',\n    style: 'BOLD',\n  },\n  {\n    label: 'Italic',\n    style: 'ITALIC',\n  },\n  {\n    label: 'Underline',\n    style: 'UNDERLINE',\n  },\n];\n\nconst InlineStyleButtons = ({toggleStyle, currentStyle}) => (\n  <>\n    {buttons.map(button => (\n      <Button\n        key={`inline-button-${button.style}`}\n        onClick={toggleStyle(button.style)}\n        actived={currentStyle.has(button.style)}\n      >\n        {button.label}\n      </Button>\n    ))}\n  </>\n);\n\nInlineStyleButtons.propTypes = {\n  toggleStyle: PropTypes.func,\n  currentStyle: PropTypes.object,\n};\n\nexport default InlineStyleButtons;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Hashtag = styled.span`\n  padding: 5px;\n  font-size: 0.8rem;\n  color: #fff;\n  border-radius: 5px;\n  background: ${props => props.theme.colors.primary_color_low};\n`;\n\nconst PATTERN = /\\#[\\w\\u0590-\\u05ff]+/g;\n\nconst decorator = {\n  strategy: (contentBlock, callback, contentState) => {\n    const text = contentBlock.getText();\n    let matchArr, start;\n    while ((matchArr = PATTERN.exec(text)) !== null) {\n      start = matchArr.index;\n      callback(start, start + matchArr[0].length);\n    }\n  },\n  component: ({children, ...props}) => <Hashtag {...props}>{children}</Hashtag>,\n};\n\nexport default decorator;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Quotes = styled.span`\n  font-style: italic;\n  font-size: 1.5rem;\n  text-decoration: underline;\n  color: #fff;\n  background: ${props => props.theme.colors.primary_color_low};\n`;\n\nconst PATTERN = /\\\".*\\\"/g;\n\nconst decorator = {\n  strategy: (contentBlock, callback, contentState) => {\n    const text = contentBlock.getText();\n    let matchArr, start;\n    while ((matchArr = PATTERN.exec(text)) !== null) {\n      start = matchArr.index;\n      callback(start, start + matchArr[0].length);\n    }\n  },\n  component: ({children, ...props}) => <Quotes {...props}>{children}</Quotes>,\n};\n\nexport default decorator;\n","import {CompositeDecorator} from 'draft-js';\nimport hashtag from './hashtag';\nimport quotes from './quotes';\n\nconst decorators = new CompositeDecorator([hashtag, quotes]);\n\nexport default decorators;\n","import React, {useState} from 'react';\nimport {Editor as DraftEditor, EditorState, RichUtils} from 'draft-js';\nimport {blockRenderer, attachImage} from './utils';\nimport {Wrapper, Toolbar, Container} from './elements';\nimport InlineStyleButtons from './inlineStyleButtons';\nimport decorators from './decorators';\nimport 'draft-js/dist/Draft.css';\n\nconst Editor = () => {\n  const [currentState, setCurrentState] = useState(\n    EditorState.createEmpty(decorators)\n  );\n  const currentInlineStyle = currentState.getCurrentInlineStyle();\n\n  const onChange = state => {\n    setCurrentState(state);\n  };\n\n  const handleKeyCommand = (command, state) => {\n    const newState = RichUtils.handleKeyCommand(state, command);\n    if (newState) {\n      setCurrentState(newState);\n    }\n  };\n\n  const toggleStyle = style => e => {\n    e.preventDefault();\n    setCurrentState(RichUtils.toggleInlineStyle(currentState, style));\n  };\n\n  return (\n    <Wrapper>\n      <Toolbar>\n        <InlineStyleButtons\n          toggleStyle={toggleStyle}\n          currentStyle={currentInlineStyle}\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={attachImage(currentState, setCurrentState)}\n        />\n      </Toolbar>\n      <Container>\n        <DraftEditor\n          editorState={currentState}\n          onChange={onChange}\n          blockRendererFn={blockRenderer}\n          handleKeyCommand={handleKeyCommand}\n          placeholder=\"Draft something...\"\n        />\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default Editor;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Editor from './components/Editor';\n\nconst Wrapper = styled.section`\n  margin: 0 auto;\n  width: 672px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  margin-bottom: 3.5rem;\n  text-align: center;\n  color: ${props => props.theme.colors.primary_color};\n`;\n\nconst Copyright = styled.span`\n  margin-top: 1rem;\n  text-align: center;\n  font-size: 1.2rem;\n  font-weight: 400;\n  color: ${props => props.theme.colors.gray_high};\n`;\n\nconst Heart = styled.span`\n  display: inline-block;\n  font-size: 1.2rem;\n  transform: scale(1);\n  color: ${props => props.theme.colors.primary_color_low};\n  animation: love 0.5s infinite linear alternate-reverse;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: ${props => props.theme.colors.primary_color_low};\n`;\n\nconst Bootstrap = () => (\n  <Wrapper>\n    <Title>Rich text editing with Draft.js</Title>\n    <Editor />\n    <Copyright>\n      Made with <Heart>♥</Heart> by{' '}\n      <Link href=\"https://github.com/iamtchelo\" target=\"_blank\">\n        Marcelo Silva\n      </Link>\n    </Copyright>\n  </Wrapper>\n);\n\nexport default Bootstrap;\n","export default {\n  colors: {\n    primary_color: '#913578',\n    primary_color_low: '#AF5496',\n    gray: '#CCCCCC',\n    gray_high: '#333333',\n    gray_low: '#F4F4F4',\n  },\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Bootstrap from './Bootstrap';\nimport {ThemeProvider} from 'emotion-theming';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <Bootstrap />\n  </ThemeProvider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}